<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        REREREREREREREREREREREREREREREREREREFJv+HxmX6DE3SS20AAAAAElFTkSuQmCC
</value>
  </data>
</root>